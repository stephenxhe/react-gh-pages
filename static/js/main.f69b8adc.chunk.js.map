{"version":3,"sources":["components/offsetText.js","RESUME.pdf","images/resume.png","images/resume_hover.png","pages/me.js","App.js","reportWebVitals.js","index.js"],"names":["OffsetText","props","useState","text","offsets","setOffsets","useEffect","map","x","i","style","marginLeft","Me","hover","setHover","class","animationDuration","justifySelf","href","RESUME","target","without","rel","onMouseEnter","onMouseLeave","maxWidth","src","resume_hover","resume","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAyBeA,EAvBI,SAACC,GAChB,MAAwBC,mBAASD,EAAME,MAAvC,mBAAOA,EAAP,KACA,GADA,KAC8BD,mBAASD,EAAMG,UAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACND,EAAWJ,EAAMG,WAClB,CAACH,EAAMG,UAEVE,qBAAU,WACND,EAAWJ,EAAME,QAClB,CAACF,EAAME,OAGN,mCAEIA,EAAKI,KAAI,SAACC,EAAGC,GAAJ,OACL,mBAAWC,MAAO,CAACC,WAAYP,EAAQK,IAAvC,SAA6CD,GAArCC,SClBT,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,yCCyC1BG,EAnCJ,SAACX,GAER,MAA0BC,oBAAS,GAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAOA,OACI,sBAAKC,MAAM,KAAX,UACI,sBAAKA,MAAM,UAAX,UACI,qBAAKA,MAAM,yBAAyBL,MAAO,CAACM,kBAAmB,UAC/D,qBAAKD,MAAM,yBAAyBL,MAAO,CAACM,kBAAmB,UAC/D,sBAAKD,MAAM,wBAAwBL,MAAO,CAACM,kBAAmB,QAA9D,UACI,qCACA,mDAIR,sBAAKD,MAAM,oBAAoBL,MAAO,CAACM,kBAAmB,QAA1D,UACI,0CACA,cAAC,EAAD,CAAYb,KAlBR,CACZ,0NACA,0LAgBmCC,QAAS,CAAC,MAAM,aAG/C,qBAAKW,MAAM,WAAWL,MAAO,CAACM,kBAAmB,OAAQC,YAAa,UAAtE,SACI,mBAAGC,KAAMC,EAAQC,OAAO,SAASC,SAAO,EAACC,IAAI,sBAAsBC,aAAc,kBAAMT,GAAS,IAAOU,aAAc,kBAAMV,GAAS,IAApI,SACI,qBAAKJ,MAAO,CAACe,SAAU,QAASC,IAAKb,EAAQc,EAAeC,Y,eCrBjEC,MARf,WACE,OACE,cAAC,IAAD,CAAYC,SAAS,IAArB,SACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,OCKxBsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f69b8adc.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst OffsetText = (props) => {\r\n    const [text, setText] = useState(props.text);\r\n    const [offsets, setOffsets] = useState(props.offsets);\r\n\r\n    useEffect(() => {\r\n        setOffsets(props.offsets);\r\n    }, [props.offsets])\r\n\r\n    useEffect(() => {\r\n        setOffsets(props.text);\r\n    }, [props.text])\r\n\r\n    return (\r\n        <>\r\n        {\r\n            text.map((x, i) => \r\n                <p key={i} style={{marginLeft: offsets[i]}}>{x}</p>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OffsetText;","export default __webpack_public_path__ + \"static/media/RESUME.5b83f9af.pdf\";","export default __webpack_public_path__ + \"static/media/resume.4392a334.png\";","export default __webpack_public_path__ + \"static/media/resume_hover.5a1b5cfa.png\";","import OffsetText from \"../components/offsetText\";\r\nimport RESUME from '../RESUME.pdf';\r\nimport resume from '../images/resume.png';\r\nimport resume_hover from '../images/resume_hover.png';\r\nimport { useState } from \"react\";\r\n\r\nconst Me = (props) => {\r\n\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const aboutMe = [\r\n        \"I'm a Mechatronics Engineering student at the University of Waterloo. I'm a software engineer and musician who loves combining the two to create tools that enhance the music making process for musicians like myself.\",\r\n        \"In the past I've worked as an embedded / firmware engineer, but most recently I've been at Audioworks developing SoundsUnite - a platform for creatives to learn and share their work.\"\r\n    ]\r\n\r\n    return (\r\n        <div class=\"me\">\r\n            <div class=\"me-hero\">\r\n                <div class=\"me-hero-image slide-in\" style={{animationDuration: '0.5s'}}/>\r\n                <div class=\"me-hero-stars slide-in\" style={{animationDuration: '0.8s'}}/>\r\n                <div class=\"me-hero-text slide-in\" style={{animationDuration: '1.5s'}}>\r\n                    <h1>Hi!</h1>\r\n                    <h1>I'm Stephen</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"me-about slide-in\" style={{animationDuration: '0.5s'}}>\r\n                <h2>About Me</h2>\r\n                <OffsetText text={aboutMe} offsets={['0px','30px']}/>\r\n            </div>\r\n\r\n            <div class=\"slide-in\" style={{animationDuration: '0.5s', justifySelf: 'center'}}>\r\n                <a href={RESUME} target='_blank' without rel='noopener noreferrer' onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\r\n                    <img style={{maxWidth: '10em'}} src={hover ? resume_hover : resume}></img>\r\n                </a>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Me;","import './App.css';\nimport Me from \"./pages/me\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Route exact path=\"/\" component={Me}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}